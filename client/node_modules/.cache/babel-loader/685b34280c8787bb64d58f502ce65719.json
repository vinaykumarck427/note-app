{"ast":null,"code":"var _jsxFileName = \"/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js\";\nimport React from 'react';\nimport axios from '../../config/config';\nimport { Link } from 'react-router-dom';\nimport { setNote, setNotes, removeNote } from \"../../actions/note\"; // import {setNote} from '../../actions/note'\n\nimport { connect } from \"react-redux\";\n\nclass NoteList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePin = id => {\n      axios.put(\"/notes/\".concat(id), {\n        isPinned: true\n      }, {\n        headers: {\n          'x-auth': localStorage.getItem('userAuthToken')\n        }\n      }).then(response => {\n        const notes = this.this.props.notes.map(note => {\n          if (note._id === response.data._id) {\n            note.isPinned = response.data.isPinned;\n            return note;\n          } else {\n            return note;\n          }\n        });\n        this.props.dispatch(setNotes(notes)); // this.setState(() => ({ notes }))\n      });\n    };\n\n    this.handleUnPin = id => {\n      axios.put(\"/notes/\".concat(id), {\n        isPinned: false\n      }, {\n        headers: {\n          'x-auth': localStorage.getItem('userAuthToken')\n        }\n      }).then(response => {\n        const notes = this.props.notes.map(note => {\n          if (note._id === response.data._id) {\n            note.isPinned = response.data.isPinned;\n            return note;\n          } else {\n            return note;\n          }\n        });\n        this.props.dispatch(setNotes(notes)); // this.setState(() => ({notes}))\n      });\n    };\n\n    this.handleCopy = note => {\n      let newNote;\n\n      if (note) {\n        newNote = {\n          title: note.title,\n          body: note.body,\n          category: note.category,\n          tags: note.tags.map(tag => ({\n            tag: tag.tag\n          })),\n          isPinned: note.isPinned\n        };\n      }\n\n      axios.post('/notes', newNote, {\n        headers: {\n          'x-auth': localStorage.getItem('userAuthToken')\n        }\n      }).then(response => {\n        this.props.dispatch(setNote(response.data)); // this.setState((prevState) => ({notes:[...prevState.notes,response.data]}))\n      });\n    };\n\n    this.handleDelete = id => {\n      axios.delete(\"/notes/\".concat(id), {\n        headers: {\n          'x-auth': localStorage.getItem('userAuthToken')\n        }\n      }).then(response => {\n        this.props.dispatch(removeNote(response.data._id)); // this.setState((prevState) => ({notes:prevState.notes.filter(note => note._id !== response.data._id)}))       \n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      this.props.dispatch(setNotes(response.data)); // this.setState(() => ({ notes: response.data }))\n    });\n  }\n\n  render() {\n    console.log(this.props.notes);\n    const pinNotes = this.props.notes.filter(note => note.isPinned === true);\n    const UnpinNotes = this.props.notes.filter(note => note.isPinned === false);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.notes.length !== 0 && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Listing notes   - \", this.props.notes.length), pinNotes.length !== 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"pinned list\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, pinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleUnPin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Unpin\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"copy\")))), UnpinNotes.length !== 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"unpinned list\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, UnpinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handlePin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"pin\"), React.createElement(\"button\", {\n      onClick: () => {\n        const confirmRemove = window.confirm('Are you sure?');\n\n        if (confirmRemove) {\n          this.handleDelete(note._id);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(Link, {\n      className: \"Link\",\n      to: \"/notes/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add Note\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps)(NoteList);","map":{"version":3,"sources":["/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js"],"names":["React","axios","Link","setNote","setNotes","removeNote","connect","NoteList","Component","handlePin","id","put","isPinned","headers","localStorage","getItem","then","response","notes","this","props","map","note","_id","data","dispatch","handleUnPin","handleCopy","newNote","title","body","category","tags","tag","post","handleDelete","delete","componentDidMount","get","render","console","log","pinNotes","filter","UnpinNotes","length","confirmRemove","window","confirm","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from '../../config/config'\nimport {Link} from 'react-router-dom'\nimport { setNote, setNotes, removeNote } from \"../../actions/note\";\n// import {setNote} from '../../actions/note'\nimport { connect } from \"react-redux\";\n\n\n\nclass NoteList extends React.Component {\n    componentDidMount() {\n        axios.get('/notes', {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                this.props.dispatch(setNotes(response.data))\n                // this.setState(() => ({ notes: response.data }))\n            })\n    }\n    handlePin = (id)  => {\n        axios.put(`/notes/${id}`, { isPinned: true }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                        const notes = this.this.props.notes.map(note => {\n                            if (note._id === response.data._id) {\n                                note.isPinned = response.data.isPinned\n                                return note\n                            } else {\n                                return note\n                            }\n                        })\n                        this.props.dispatch(setNotes(notes)\n                        );\n                        // this.setState(() => ({ notes }))\n                    })             \n    }\n    handleUnPin = (id) => {\n        axios.put(`/notes/${id}`, { isPinned: false }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                const notes=this.props.notes.map(note => {\n                     if (note._id === response.data._id) {\n                        note.isPinned = response.data.isPinned\n                        return note\n                    }else{\n                        return note\n                    }\n                })\n                this.props.dispatch(setNotes(notes))\n\n                // this.setState(() => ({notes}))\n            })\n    }\n\n    handleCopy = (note) => {\n        let newNote\n        if(note){\n            newNote = {\n                title:note.title,\n                body:note.body,\n                category:note.category,\n                tags:note.tags.map(tag => ({tag:tag.tag})),\n                isPinned:note.isPinned\n            }\n        }\n        axios.post('/notes', newNote, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            this.props.dispatch(setNote(response.data))\n            // this.setState((prevState) => ({notes:[...prevState.notes,response.data]}))\n        })\n    }\n    handleDelete = (id) => {\n        axios.delete(`/notes/${id}`, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            this.props.dispatch(removeNote(response.data._id))\n            // this.setState((prevState) => ({notes:prevState.notes.filter(note => note._id !== response.data._id)}))       \n        })\n    }\n    render() {\n        console.log(this.props.notes)\n        const pinNotes = this.props.notes.filter(note => note.isPinned === true)\n        const UnpinNotes = this.props.notes.filter(note => note.isPinned === false)\n        return(        \n            <div>\n                {this.props.notes.length !== 0 && (<h1>Listing notes   - {this.props.notes.length}</h1>)}\n\n                 {pinNotes.length !== 0 && (<span><h2>pinned list</h2></span>)}\n                 <ul>\n                     {pinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handleUnPin(note._id) }}>Unpin</button><button onClick={() => {\n                        this.handleDelete(note._id)\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                              </ul>\n\n                 {UnpinNotes.length !== 0 && (<span><h2>unpinned list</h2></span>)}\n                 <ul>\n                    {UnpinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handlePin(note._id) }}>pin</button><button onClick={() => {\n                        const confirmRemove = window.confirm('Are you sure?')\n                        if(confirmRemove){\n                            this.handleDelete(note._id)\n                       }\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n\n                <Link className=\"Link\" to='/notes/new'>Add Note</Link>\n             </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        notes:state.notes\n    }\n}\nexport default connect(mapStateToProps)(NoteList);"]},"metadata":{},"sourceType":"module"}