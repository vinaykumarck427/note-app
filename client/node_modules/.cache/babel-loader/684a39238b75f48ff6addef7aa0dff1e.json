{"ast":null,"code":"var _jsxFileName = \"/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass NoteList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    this.handlePin = this.handlePin.bind(this);\n    this.handleUnPin = this.handleUnPin.bind(this);\n    this.handleCopy = this.handleCopy.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3006/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      this.setState(() => ({\n        notes: response.data\n      }));\n    });\n  }\n\n  handlePin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: true\n    }, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      const notes = this.state.notes.map(note => {\n        if (note._id === response.data._id) {\n          note.isPinned = response.data.isPinned;\n          return note;\n        } else {\n          return note;\n        }\n      });\n      this.setState(() => ({\n        notes\n      }));\n    });\n  }\n\n  handleUnPin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: false\n    }, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      const notes = this.state.notes.map(note => {\n        if (note._id === response.data._id) {\n          note.isPinned = response.data.isPinned;\n          return note;\n        } else {\n          return note;\n        }\n      });\n      console.log(notes);\n      this.setState(() => ({\n        notes\n      }));\n    });\n  }\n\n  handleCopy(note) {\n    let newNote;\n\n    if (note) {\n      newNote = {\n        title: note.title,\n        body: note.body,\n        category: note.category,\n        tags: note.tags.map(tag => ({\n          tag: tag.tag\n        })),\n        isPinned: note.isPinned\n      };\n    }\n\n    axios.post('http://localhost:3006/notes', newNote, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      this.setState(prevState => ({\n        notes: prevState.notes.concat(response.data)\n      }));\n    });\n  }\n\n  handleDelete(id) {\n    axios.delete(\"http://localhost:3006/notes/\".concat(id), {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      // const note= this.state.notes.find(noteItem => noteItem._id === id)\n      // const index = this.state.notes.indexOf(note)\n      // this.state.notes.splice(index,1)\n      this.setState(prevState => ({\n        notes: prevState.notes.filter(note => note._id !== id)\n      }));\n    });\n  }\n\n  render() {\n    const pinNotes = this.state.notes.filter(note => note.isPinned === true);\n    const UnpinNotes = this.state.notes.filter(note => note.isPinned === false);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Listing notes   - \", this.state.notes.length), pinNotes.length !== 0(React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"pinned list\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, pinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleUnPin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Unpin\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"copy\")))), UnpinNotes.length !== 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"unpinned list\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, UnpinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handlePin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"pin\"), React.createElement(\"button\", {\n      onClick: () => {\n        const confirmRemove = window.confirm('Are you sure?');\n\n        if (confirmRemove) {\n          this.handleDelete(note._id);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(Link, {\n      to: \"/notes/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add Note\"));\n  }\n\n}\n\nexport default NoteList;","map":{"version":3,"sources":["/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js"],"names":["React","axios","Link","NoteList","Component","constructor","props","state","notes","handlePin","bind","handleUnPin","handleCopy","handleDelete","componentDidMount","get","headers","localStorage","getItem","then","response","setState","data","id","put","isPinned","map","note","_id","console","log","newNote","title","body","category","tags","tag","post","prevState","concat","delete","filter","render","pinNotes","UnpinNotes","length","confirmRemove","window","confirm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,SAAL,GAAe,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAf;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,UAAL,GAAgB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKG,YAAL,GAAkB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AACDI,EAAAA,iBAAiB,GAAG;AAChBb,IAAAA,KAAK,CAACc,GAAN,CAAU,6BAAV,EAAyC;AACrCC,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADL;AAD4B,KAAzC,EAKKC,IALL,CAKUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc,OAAO;AAAEb,QAAAA,KAAK,EAAEY,QAAQ,CAACE;AAAlB,OAAP,CAAd;AACH,KAPL;AAQH;;AACDb,EAAAA,SAAS,CAACc,EAAD,EAAK;AACVtB,IAAAA,KAAK,CAACuB,GAAN,uCAAyCD,EAAzC,GAA+C;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAA/C,EAAmE;AAC/DT,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADL;AADsD,KAAnE,EAKKC,IALL,CAKUC,QAAQ,IAAI;AACN,YAAMZ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBkB,GAAjB,CAAqBC,IAAI,IAAI;AACvC,YAAIA,IAAI,CAACC,GAAL,KAAaR,QAAQ,CAACE,IAAT,CAAcM,GAA/B,EAAoC;AAChCD,UAAAA,IAAI,CAACF,QAAL,GAAgBL,QAAQ,CAACE,IAAT,CAAcG,QAA9B;AACA,iBAAOE,IAAP;AACH,SAHD,MAGO;AACH,iBAAOA,IAAP;AACH;AACJ,OAPa,CAAd;AAQA,WAAKN,QAAL,CAAc,OAAO;AAAEb,QAAAA;AAAF,OAAP,CAAd;AACH,KAfb;AAgBH;;AACDG,EAAAA,WAAW,CAACY,EAAD,EAAK;AACZtB,IAAAA,KAAK,CAACuB,GAAN,uCAAyCD,EAAzC,GAA+C;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAA/C,EAAoE;AAChET,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADL;AADuD,KAApE,EAKKC,IALL,CAKUC,QAAQ,IAAI;AACd,YAAMZ,KAAK,GAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBkB,GAAjB,CAAqBC,IAAI,IAAI;AACpC,YAAIA,IAAI,CAACC,GAAL,KAAaR,QAAQ,CAACE,IAAT,CAAcM,GAA/B,EAAoC;AACjCD,UAAAA,IAAI,CAACF,QAAL,GAAgBL,QAAQ,CAACE,IAAT,CAAcG,QAA9B;AACA,iBAAOE,IAAP;AACH,SAHA,MAGI;AACD,iBAAOA,IAAP;AACH;AACJ,OAPW,CAAZ;AAQAE,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACA,WAAKa,QAAL,CAAc,OAAO;AAACb,QAAAA;AAAD,OAAP,CAAd;AACH,KAhBL;AAiBH;;AAEDI,EAAAA,UAAU,CAACe,IAAD,EAAM;AACZ,QAAII,OAAJ;;AACA,QAAGJ,IAAH,EAAQ;AACJI,MAAAA,OAAO,GAAG;AACNC,QAAAA,KAAK,EAACL,IAAI,CAACK,KADL;AAENC,QAAAA,IAAI,EAACN,IAAI,CAACM,IAFJ;AAGNC,QAAAA,QAAQ,EAACP,IAAI,CAACO,QAHR;AAINC,QAAAA,IAAI,EAACR,IAAI,CAACQ,IAAL,CAAUT,GAAV,CAAcU,GAAG,KAAK;AAACA,UAAAA,GAAG,EAACA,GAAG,CAACA;AAAT,SAAL,CAAjB,CAJC;AAKNX,QAAAA,QAAQ,EAACE,IAAI,CAACF;AALR,OAAV;AAOH;;AACDxB,IAAAA,KAAK,CAACoC,IAAN,CAAW,6BAAX,EAA0CN,OAA1C,EAAoD;AAChDf,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADL;AADuC,KAApD,EAKCC,IALD,CAKMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAeiB,SAAD,KAAgB;AAAC9B,QAAAA,KAAK,EAAC8B,SAAS,CAAC9B,KAAV,CAAgB+B,MAAhB,CAAuBnB,QAAQ,CAACE,IAAhC;AAAP,OAAhB,CAAd;AACH,KAPD;AAQH;;AACDT,EAAAA,YAAY,CAACU,EAAD,EAAI;AACZtB,IAAAA,KAAK,CAACuC,MAAN,uCAA4CjB,EAA5C,GAAkD;AAC9CP,MAAAA,OAAO,EAAE;AACL,kBAAUC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADL;AADqC,KAAlD,EAKCC,IALD,CAKMC,QAAQ,IAAI;AACd;AACA;AACA;AACA,WAAKC,QAAL,CAAeiB,SAAD,KAAgB;AAAC9B,QAAAA,KAAK,EAAC8B,SAAS,CAAC9B,KAAV,CAAgBiC,MAAhB,CAAuBd,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,EAA5C;AAAP,OAAhB,CAAd;AACH,KAVD;AAWH;;AACDmB,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKpC,KAAL,CAAWC,KAAX,CAAiBiC,MAAjB,CAAwBd,IAAI,IAAIA,IAAI,CAACF,QAAL,KAAkB,IAAlD,CAAjB;AACA,UAAMmB,UAAU,GAAG,KAAKrC,KAAL,CAAWC,KAAX,CAAiBiC,MAAjB,CAAwBd,IAAI,IAAIA,IAAI,CAACF,QAAL,KAAkB,KAAlD,CAAnB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuB,KAAKlB,KAAL,CAAWC,KAAX,CAAiBqC,MAAxC,CADJ,EAGKF,QAAQ,CAACE,MAAT,KAAoB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN,CAAF,CAHzB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,QAAQ,CAACjB,GAAT,CAAaC,IAAI,IAAI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,oBAAC,IAAD;AAAM,MAAA,EAAE,mBAAYD,IAAI,CAACC,GAAjB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,IAAI,CAACK,KAAtC,CAAnB,EAAsE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKrB,WAAL,CAAiBgB,IAAI,CAACC,GAAtB;AAA4B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtE,EAA2I;AAAQ,MAAA,OAAO,EAAE,MAAM;AACpL,aAAKf,YAAL,CAAkBc,IAAI,CAACC,GAAvB;AACH,OAFgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3I,EAEJ;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrC,aAAKhB,UAAL,CAAgBe,IAAhB;AAAsB,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,CAArB,CADL,CAJJ,EAWKiB,UAAU,CAACC,MAAX,KAAsB,CAAtB,IAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAN,CAXjC,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,UAAU,CAAClB,GAAX,CAAeC,IAAI,IAAI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,oBAAC,IAAD;AAAM,MAAA,EAAE,mBAAYD,IAAI,CAACC,GAAjB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,IAAI,CAACK,KAAtC,CAAnB,EAAsE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKvB,SAAL,CAAekB,IAAI,CAACC,GAApB;AAA0B,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtE,EAAuI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAClL,cAAMkB,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAtB;;AACA,YAAGF,aAAH,EAAiB;AACb,eAAKjC,YAAL,CAAkBc,IAAI,CAACC,GAAvB;AACH;AACJ,OAL8J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvI,EAKN;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrC,aAAKhB,UAAL,CAAgBe,IAAhB;AAAsB,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALM,CAAvB,CADL,CAZJ,EAsBI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ,CADJ;AA0BH;;AAzHkC;;AA2HvC,eAAexB,QAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nclass NoteList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: [],\n        }\n        this.handlePin=this.handlePin.bind(this)\n        this.handleUnPin = this.handleUnPin.bind(this)\n        this.handleCopy=this.handleCopy.bind(this)\n        this.handleDelete=this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        axios.get('http://localhost:3006/notes', {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                this.setState(() => ({ notes: response.data }))\n            })\n    }\n    handlePin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, { isPinned: true }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                        const notes = this.state.notes.map(note => {\n                            if (note._id === response.data._id) {\n                                note.isPinned = response.data.isPinned\n                                return note\n                            } else {\n                                return note\n                            }\n                        })\n                        this.setState(() => ({ notes }))\n                    })             \n    }\n    handleUnPin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, { isPinned: false }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                const notes=this.state.notes.map(note => {\n                     if (note._id === response.data._id) {\n                        note.isPinned = response.data.isPinned\n                        return note\n                    }else{\n                        return note\n                    }\n                })\n                console.log(notes)\n                this.setState(() => ({notes}))\n            })\n    }\n\n    handleCopy(note){\n        let newNote\n        if(note){\n            newNote = {\n                title:note.title,\n                body:note.body,\n                category:note.category,\n                tags:note.tags.map(tag => ({tag:tag.tag})),\n                isPinned:note.isPinned\n            }\n        }\n        axios.post('http://localhost:3006/notes', newNote , {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            this.setState((prevState) => ({notes:prevState.notes.concat(response.data)}))\n        })\n    }\n    handleDelete(id){\n        axios.delete(`http://localhost:3006/notes/${id}`, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            // const note= this.state.notes.find(noteItem => noteItem._id === id)\n            // const index = this.state.notes.indexOf(note)\n            // this.state.notes.splice(index,1)\n            this.setState((prevState) => ({notes:prevState.notes.filter(note => note._id !== id)}))\n        })\n    }\n    render() {\n        const pinNotes = this.state.notes.filter(note => note.isPinned === true)\n        const UnpinNotes = this.state.notes.filter(note => note.isPinned === false)\n        return (\n            <div>\n                <h1>Listing notes   - {this.state.notes.length}</h1>\n                \n                {pinNotes.length !== 0(<span><h2>pinned list</h2></span>)}\n                <ul>\n                    {pinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handleUnPin(note._id) }}>Unpin</button><button onClick={() => {\n                        this.handleDelete(note._id)\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n\n                {UnpinNotes.length !== 0 && (<span><h2>unpinned list</h2></span>)}\n                <ul>\n                    {UnpinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handlePin(note._id) }}>pin</button><button onClick={() => {\n                        const confirmRemove = window.confirm('Are you sure?')\n                        if(confirmRemove){\n                            this.handleDelete(note._id)\n                        }\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n                \n                <Link to='/notes/new'>Add Note</Link>\n            </div>\n        )\n    }\n}\nexport default NoteList"]},"metadata":{},"sourceType":"module"}