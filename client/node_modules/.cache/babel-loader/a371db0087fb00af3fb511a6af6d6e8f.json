{"ast":null,"code":"var _jsxFileName = \"/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass NoteList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    this.handlePin = this.handlePin.bind(this);\n    this.handleUnPin = this.handleUnPin.bind(this);\n    this.handleCopy = this.handleCopy.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3006/notes').then(response => {\n      this.setState(() => ({\n        notes: response.data\n      }));\n    });\n  }\n\n  handlePin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: false\n    }).then(response => {\n      let note;\n      note = this.state.notes.find(note => note._id === response.data._id);\n      note.isPinned = response.data.isPinned;\n      console.log(this.state.notes);\n      this.setState(() => ({}));\n    });\n  }\n\n  handleUnPin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: true\n    }).then(response => {\n      const note = this.state.notes.find(note => note._id === response.data._id);\n      note.isPinned = response.data.isPinned;\n      console.log(this.state.notes);\n      this.setState(() => ({}));\n    });\n    console.log(this.state.notes);\n  }\n\n  handleCopy(note) {\n    // let tags\n    // note.tags.forEach(function (tagItem){\n    //     Array.prototype.push({tag:tagItem})\n    // })\n    // console.log(tags)\n    axios.post('http://localhost:3006/notes', {\n      title: note.title,\n      body: note.body,\n      category: note.category\n    }).then(response => {\n      this.state.notes.push(response.data);\n      this.setState(() => ({}));\n    });\n  }\n\n  handleDelete(id) {\n    axios.delete(\"http://localhost:3006/notes/\".concat(id)).then(response => {\n      // const note= this.state.notes.find(noteItem => noteItem._id === id)\n      // const index = this.state.notes.indexOf(note)\n      // this.state.notes.splice(index,1)\n      this.setState(prevState => ({\n        notes: prevState.notes.filter(note => note._id !== id)\n      }));\n    });\n  }\n\n  render() {\n    const pinNotes = this.state.notes.filter(note => note.isPinned === true);\n    const UnpinNotes = this.state.notes.filter(note => note.isPinned === false);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Listing notes   - \", this.state.notes.length), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, pinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handlePin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Unpin\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"others\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, UnpinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleUnPin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"pin\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(Link, {\n      to: \"/notes/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Add Note\"));\n  }\n\n}\n\nexport default NoteList;","map":{"version":3,"sources":["/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js"],"names":["React","axios","Link","NoteList","Component","constructor","props","state","notes","handlePin","bind","handleUnPin","handleCopy","handleDelete","componentDidMount","get","then","response","setState","data","id","put","isPinned","note","find","_id","console","log","post","title","body","category","push","delete","prevState","filter","render","pinNotes","UnpinNotes","length","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nclass NoteList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: [],\n        }\n        this.handlePin=this.handlePin.bind(this)\n        this.handleUnPin = this.handleUnPin.bind(this)\n        this.handleCopy=this.handleCopy.bind(this)\n        this.handleDelete=this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        axios.get('http://localhost:3006/notes')\n            .then(response => {\n                this.setState(() => ({ notes: response.data }))\n            })\n    }\n    handlePin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, {isPinned:false})\n            .then(response => {\n                let note\n                note = this.state.notes.find(note => note._id === response.data._id)\n                note.isPinned = response.data.isPinned\n                console.log(this.state.notes)\n                this.setState(() => ({}))\n            })             \n    }\n    handleUnPin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, { isPinned: true })\n            .then(response => {\n                const note = this.state.notes.find(note => note._id === response.data._id)\n                note.isPinned = response.data.isPinned\n                console.log(this.state.notes)\n                this.setState(() => ({}))\n            })\n            console.log(this.state.notes)\n    }\n    handleCopy(note){\n        // let tags\n        // note.tags.forEach(function (tagItem){\n        //     Array.prototype.push({tag:tagItem})\n        // })\n        // console.log(tags)\n        axios.post('http://localhost:3006/notes',{title:note.title,body:note.body,category:note.category})\n        .then(response => {\n            this.state.notes.push(response.data)\n            this.setState(() => ({}))\n        })\n    }\n    handleDelete(id){\n        axios.delete(`http://localhost:3006/notes/${id}`)\n        .then(response => {\n            // const note= this.state.notes.find(noteItem => noteItem._id === id)\n            // const index = this.state.notes.indexOf(note)\n            // this.state.notes.splice(index,1)\n            this.setState((prevState) => ({notes:prevState.notes.filter(note => note._id !== id)}))\n        })\n    }\n    render() {\n        const pinNotes = this.state.notes.filter(note => note.isPinned === true)\n        const UnpinNotes = this.state.notes.filter(note => note.isPinned === false)\n        return (\n            <div>\n                <h1>Listing notes   - {this.state.notes.length}</h1>\n                \n                <ul>\n                    {pinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handlePin(note._id) }}>Unpin</button><button onClick={() => {\n                        this.handleDelete(note._id)\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n\n                <span><h2>others</h2></span>\n                <ul>\n                    {UnpinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handleUnPin(note._id) }}>pin</button><button onClick={() => {\n                        this.handleDelete(note._id)\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n                \n                <Link to='/notes/new'>Add Note</Link>\n            </div>\n        )\n    }\n}\nexport default NoteList"]},"metadata":{},"sourceType":"module"}