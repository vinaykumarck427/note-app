{"ast":null,"code":"var _jsxFileName = \"/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass NoteList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    this.handlePin = this.handlePin.bind(this);\n    this.handleUnPin = this.handleUnPin.bind(this);\n    this.handleCopy = this.handleCopy.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3006/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      this.setState(() => ({\n        notes: response.data\n      }));\n    });\n  }\n\n  handlePin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: true\n    }, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      console.log(response.data);\n      let note;\n      note = this.state.notes.find(note => note._id === response.data._id);\n      note.isPinned = response.data.isPinned;\n      console.log(this.state.notes);\n      this.setState(() => ({}));\n    });\n  }\n\n  handleUnPin(id) {\n    axios.put(\"http://localhost:3006/notes/\".concat(id), {\n      isPinned: false\n    }, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      // const note = this.state.notes.find(note => note._id === response.data._id)\n      // note.isPinned = response.data.isPinned\n      console.log(this.state.notes);\n      const notes = this.state.notes.map(note => {\n        if (note._id === response.data._id) {\n          note.isPinned = response.data.isPinned;\n          return note;\n        } else {\n          return note;\n        }\n      });\n      console.log(notes); // this.setState(() => ({notes}))\n    });\n  }\n\n  handleCopy(note) {\n    let newNote;\n\n    if (note) {\n      newNote = {\n        title: note.title,\n        body: note.body,\n        category: note.category,\n        tags: note.tags.map(tag => ({\n          tag: tag.tag\n        })),\n        isPinned: note.isPinned\n      };\n    }\n\n    axios.post('http://localhost:3006/notes', newNote, {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      this.setState(prevState => ({\n        notes: prevState.notes.concat(response.data)\n      }));\n    });\n  }\n\n  handleDelete(id) {\n    axios.delete(\"http://localhost:3006/notes/\".concat(id), {\n      headers: {\n        'x-auth': localStorage.getItem('userAuthToken')\n      }\n    }).then(response => {\n      // const note= this.state.notes.find(noteItem => noteItem._id === id)\n      // const index = this.state.notes.indexOf(note)\n      // this.state.notes.splice(index,1)\n      this.setState(prevState => ({\n        notes: prevState.notes.filter(note => note._id !== id)\n      }));\n    });\n  }\n\n  render() {\n    const pinNotes = this.state.notes.filter(note => note.isPinned === true);\n    const UnpinNotes = this.state.notes.filter(note => note.isPinned === false);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Listing notes   - \", this.state.notes.length), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, pinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleUnPin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Unpin\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"others\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, UnpinNotes.map(note => React.createElement(\"li\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, note.title), React.createElement(\"button\", {\n      onClick: () => {\n        this.handlePin(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"pin\"), React.createElement(\"button\", {\n      onClick: () => {\n        const confirmRemove = window.confirm('Are you sure?');\n\n        if (confirmRemove) {\n          this.handleDelete(note._id);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleCopy(note);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"copy\")))), React.createElement(Link, {\n      to: \"/notes/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Add Note\"));\n  }\n\n}\n\nexport default NoteList;","map":{"version":3,"sources":["/home/vinay/feb-mern-fs/node-express/note-app/client/src/component/notes/List.js"],"names":["React","axios","Link","NoteList","Component","constructor","props","state","notes","handlePin","bind","handleUnPin","handleCopy","handleDelete","componentDidMount","get","headers","localStorage","getItem","then","response","setState","data","id","put","isPinned","console","log","note","find","_id","map","newNote","title","body","category","tags","tag","post","prevState","concat","delete","filter","render","pinNotes","UnpinNotes","length","confirmRemove","window","confirm"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nclass NoteList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: [],\n        }\n        this.handlePin=this.handlePin.bind(this)\n        this.handleUnPin = this.handleUnPin.bind(this)\n        this.handleCopy=this.handleCopy.bind(this)\n        this.handleDelete=this.handleDelete.bind(this)\n    }\n    componentDidMount() {\n        axios.get('http://localhost:3006/notes', {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                this.setState(() => ({ notes: response.data }))\n            })\n    }\n    handlePin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, { isPinned: true }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                console.log(response.data)\n                let note\n                note = this.state.notes.find(note => note._id === response.data._id)\n                note.isPinned = response.data.isPinned\n                console.log(this.state.notes)\n                this.setState(() => ({}))\n            })             \n    }\n    handleUnPin(id) {\n        axios.put(`http://localhost:3006/notes/${id}`, { isPinned: false }, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n            .then(response => {\n                // const note = this.state.notes.find(note => note._id === response.data._id)\n                // note.isPinned = response.data.isPinned\n                console.log(this.state.notes)\n                const notes=this.state.notes.map(note => {\n                     if (note._id === response.data._id) {\n                        note.isPinned = response.data.isPinned\n                        return note\n                    }else{\n                        return note\n                    }\n                })\n                console.log(notes)\n                // this.setState(() => ({notes}))\n            })\n    }\n\n    handleCopy(note){\n        let newNote\n        if(note){\n            newNote = {\n                title:note.title,\n                body:note.body,\n                category:note.category,\n                tags:note.tags.map(tag => ({tag:tag.tag})),\n                isPinned:note.isPinned\n            }\n        }\n        axios.post('http://localhost:3006/notes', newNote , {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            this.setState((prevState) => ({notes:prevState.notes.concat(response.data)}))\n        })\n    }\n    handleDelete(id){\n        axios.delete(`http://localhost:3006/notes/${id}`, {\n            headers: {\n                'x-auth': localStorage.getItem('userAuthToken')\n            }\n        })\n        .then(response => {\n            // const note= this.state.notes.find(noteItem => noteItem._id === id)\n            // const index = this.state.notes.indexOf(note)\n            // this.state.notes.splice(index,1)\n            this.setState((prevState) => ({notes:prevState.notes.filter(note => note._id !== id)}))\n        })\n    }\n    render() {\n        const pinNotes = this.state.notes.filter(note => note.isPinned === true)\n        const UnpinNotes = this.state.notes.filter(note => note.isPinned === false)\n        return (\n            <div>\n                <h1>Listing notes   - {this.state.notes.length}</h1>\n                \n                <ul>\n                    {pinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handleUnPin(note._id) }}>Unpin</button><button onClick={() => {\n                        this.handleDelete(note._id)\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n\n                <span><h2>others</h2></span>\n                <ul>\n                    {UnpinNotes.map(note => <li key={note._id}><Link to={`/notes/${note._id}`}>{note.title}</Link><button onClick={() => { this.handlePin(note._id) }}>pin</button><button onClick={() => {\n                        const confirmRemove = window.confirm('Are you sure?')\n                        if(confirmRemove){\n                            this.handleDelete(note._id)\n                        }\n                    }}>delete</button><button onClick={() => {\n                        this.handleCopy(note)}}>copy</button></li>)}\n                </ul>\n                \n                <Link to='/notes/new'>Add Note</Link>\n            </div>\n        )\n    }\n}\nexport default NoteList"]},"metadata":{},"sourceType":"module"}